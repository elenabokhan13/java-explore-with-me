{
	"info": {
		"_postman_id": "eef822c3-2a96-41f4-b1f8-d39a9541377c",
		"name": "Feature Comments Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31428045"
	},
	"item": [
		{
			"name": "Comment create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Has comment create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Test comment 'id' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'userId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('userId');\r",
							"    pm.expect(jsonData.userId, '\"userId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'eventId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('eventId');\r",
							"    pm.expect(jsonData.eventId, '\"eventId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'comment' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('comment');\r",
							"    pm.expect(jsonData.comment, '\"comment\" field must be \"New comment\"').to.eql('New comment');    \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventId\": 1,\r\n    \"userId\": 1,\r\n    \"comment\": \"New comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment create Fail comment length <1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventId\": 1,\r\n    \"userId\": 1,\r\n    \"comment\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment create Fail comment length > 64",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventId\": 1,\r\n    \"userId\": 1,\r\n    \"comment\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment create Fail Event doesn't exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventId\": 1000000000000000,\r\n    \"userId\": 1,\r\n    \"comment\": \"New comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment create Fail user doesn't exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventId\": 1,\r\n    \"userId\": 1000000000000,\r\n    \"comment\": \"New comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment get by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Has comment create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Test comment 'id' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'userId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('userId');\r",
							"    pm.expect(jsonData.userId, '\"userId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'eventId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('eventId');\r",
							"    pm.expect(jsonData.eventId, '\"eventId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'comment' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('comment');\r",
							"    pm.expect(jsonData.comment, '\"comment\" field must be \"New comment\"').to.eql('New comment');    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment?commentId=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get comment by id Not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment?commentId=1000000000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "commentId",
							"value": "1000000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get comments by event id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Has comment create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Test comment 'id' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('id');\r",
							"    pm.expect(jsonData[0].id, '\"id\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'userId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('userId');\r",
							"    pm.expect(jsonData[0].userId, '\"userId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'eventId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('eventId');\r",
							"    pm.expect(jsonData[0].eventId, '\"eventId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'comment' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('comment');\r",
							"    pm.expect(jsonData[0].comment, '\"comment\" field must be \"New comment\"').to.eql('New comment');    \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment/all?eventId=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"all"
					],
					"query": [
						{
							"key": "eventId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get comments by event id empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Has comment create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment/all?eventId=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"all"
					],
					"query": [
						{
							"key": "eventId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get comments by event id not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment/all?eventId=20000000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"all"
					],
					"query": [
						{
							"key": "eventId",
							"value": "20000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment patch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Has comment create response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Test comment 'id' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'userId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('userId');\r",
							"    pm.expect(jsonData.userId, '\"userId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'eventId' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('eventId');\r",
							"    pm.expect(jsonData.eventId, '\"eventId\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test(\"Test comment 'comment' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('comment');\r",
							"    pm.expect(jsonData.comment, '\"comment\" field must be \"Updated comment\"').to.eql('Updated comment');    \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\": \"Updated comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment?userId=1&commentId=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment patch comment not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\": \"Updated comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment?userId=1&commentId=1000000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "commentId",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment patch user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\": \"Updated comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment?userId=1000000000&commentId=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "userId",
							"value": "1000000000"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment patch comment length < 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment?userId=1&commentId=1000000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "commentId",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment patch comment length > 64",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\": \"Updated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated commentUpdated comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment?userId=1&commentId=1000000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "commentId",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment patch user has no access to edit comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([403]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\": \"Updated comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/comment?userId=2&commentId=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "userId",
							"value": "2"
						},
						{
							"key": "commentId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment delete user doesn't have access",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([403]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment?commentId=1&userId=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "commentId",
							"value": "1"
						},
						{
							"key": "userId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment delete user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment?commentId=1&userId=20000000000000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "commentId",
							"value": "1"
						},
						{
							"key": "userId",
							"value": "20000000000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment?commentId=1&userId=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "commentId",
							"value": "1"
						},
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment delete comment not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/comment?commentId=1&userId=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "commentId",
							"value": "1"
						},
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}