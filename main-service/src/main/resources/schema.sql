DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR (250) NOT NULL,
  email VARCHAR (254) UNIQUE NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR (50) UNIQUE NOT NULL,
  CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  annotation VARCHAR (2000) NOT NULL,
  category_id INTEGER NOT NULL REFERENCES categories(id) ON DELETE CASCADE,
  created_on TIMESTAMP NOT NULL,
  description VARCHAR (7000) NOT NULL,
  event_date TIMESTAMP NOT NULL,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  lat FLOAT NOT NULL,
  lon FLOAT NOT NULL,
  paid BOOLEAN,
  participant_limit INTEGER,
  published_on TIMESTAMP,
  request_moderation BOOLEAN,
  state VARCHAR (9),
  title VARCHAR (120) NOT NULL,
  CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created TIMESTAMP,
  event INTEGER NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  requester INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  status VARCHAR (9)
);

CREATE TABLE compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  pinned BOOLEAN,
  title VARCHAR (50) NOT NULL,
  CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE compilations_events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  compilation_id INTEGER NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
  event_id INTEGER NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  CONSTRAINT pk_compilations_events PRIMARY KEY (id)
);

CREATE TABLE comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  comment VARCHAR (64) NOT NULL,
  event_id INTEGER NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  comment_posting_time TIMESTAMP,
  edited BOOLEAN,
  CONSTRAINT pk_comments PRIMARY KEY (id)
);


